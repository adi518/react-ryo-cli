{"version":3,"sources":["components/Nav.js","components/Page.js","components/Logo.js","components/Title.js","components/Emoji.js","components/Motto.js","components/Link.js","components/Footer.js","components/Social.js","components/HeroPage.js","components/Markdown.js","components/Button.js","components/GetStarted.js","components/GitHubAnchor.js","components/FacebookAnchor.js","routes/Root.js","App.js","serviceWorker.js","index.js"],"names":["StyledNav","styled","div","Nav","children","scrollYPosition","useWindowScroll","y","className","Page","StyledLogo","Pre","pre","Logo","dangerouslySetInnerHTML","__html","StyledTitle","span","Title","pkg","name","version","Emoji","React","forwardRef","ref","ariaLabel","restProps","role","aria-label","StyledMotto","rotateEmoji","keyframes","Line","Motto","element","emojiRef","useRef","isHovering","useHoverDirty","useState","animationEnded","setAnimationEnded","current","style","animation","offsetHeight","onAnimationStart","onAnimationEnd","cx","Link","a","attrs","rel","StyledFooter","footer","StyledHeart","Heart","fill","focusable","aria-hidden","viewBox","xmlns","d","Footer","href","StyledSocial","SocialIcon","HeroHeader","inlineStyle","css","StyledMarkdown","inline","Markdown","pathToMarkdown","markdown","setMarkdown","useEffectOnce","fetch","text","Prism","highlightAll","source","Button","button","StyledGetStarted","Buttons","StyledGitHubButton","GitHubButton","repository","url","GetStarted","to","smooth","GitHubAnchor","FacebookLogo","FacebookAnchor","Root","Fragment","HeroPage","Social","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b9ffddad.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useWindowScroll } from 'react-use';\n\nconst StyledNav = styled.div`\n  top: 0;\n  z-index: 1;\n  width: 100%;\n  display: flex;\n  padding: 1rem;\n  align-items: center;\n  position: absolute;\n  transition: background-color 0.5s, padding 0.5s;\n\n  &.is-sticky {\n    position: fixed;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    background-color: rgba(var(--color-background-rgb), 0.85);\n\n    // FIXME: hacky workaround\n    svg {\n      width: 1.5rem;\n      fill: var(--color-text-dark);\n    }\n\n    .Title {\n      visibility: visible;\n      color: var(--color-text-dark);\n\n      @media (max-width: 425px) {\n        display: unset;\n      }\n    }\n  }\n`;\n\nconst Nav = ({ children }) => {\n  const { y: scrollYPosition } = useWindowScroll();\n\n  return (\n    <StyledNav className={scrollYPosition > 0 ? 'is-sticky' : null}>\n      {children}\n    </StyledNav>\n  );\n};\n\nexport default Nav;\n","import styled from 'styled-components';\n\nexport const StyledPage = styled.div`\n  display: flex;\n  min-height: 100vh;\n  padding: 4rem 14rem;\n  flex-direction: column;\n  background-color: var(--color-background);\n\n  > h1:not(:first-child) {\n    margin-top: 4rem;\n  }\n\n  @media (max-width: 1024px) {\n    padding-left: 6rem;\n    padding-right: 6rem;\n  }\n\n  @media (max-width: 768px) {\n    padding: 2rem;\n  }\n`;\n\nconst Page = StyledPage;\n\nexport default Page;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLogo = styled.div`\r\n  transform: translateY(-1rem);\r\n\r\n  img {\r\n    width: 100%;\r\n    display: block;\r\n    transition: width 0.5s;\r\n    max-width: var(--max-width);\r\n  }\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 1.25rem;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-image: linear-gradient(\r\n    180deg,\r\n    rgba(131, 116, 235, 1) 0%,\r\n    rgba(155, 116, 235, 1) 25%,\r\n    rgba(232, 116, 235, 1) 26%,\r\n    rgba(234, 175, 144, 1) 50%,\r\n    rgba(234, 178, 139, 1) 51%,\r\n    rgba(236, 213, 85, 1) 74%,\r\n    rgba(225, 215, 91, 1) 75%,\r\n    rgba(116, 236, 149, 1) 100%\r\n  );\r\n\r\n  @media (max-width: 767.98px) {\r\n    font-size: 2.25vw;\r\n  }\r\n`;\r\n\r\nconst ascii = `\r\n                         __                                    ___\r\n   ________  ____ ______/ /_      _______  ______        _____/ (_)\r\n  / ___/ _ \\\\/ __ \\`/ ___/ __/_____/ ___/ / / / __ \\\\______/ ___/ / /\r\n / /  /  __/ /_/ / /__/ /_/_____/ /  / /_/ / /_/ /_____/ /__/ / /\r\n/_/   \\\\___/\\\\__,_/\\\\___/\\\\__/     /_/   \\\\__, /\\\\____/      \\\\___/_/_/\r\n                                    /____/\r\n`;\r\n\r\nconst Logo = () => (\r\n  <StyledLogo>\r\n    <Pre dangerouslySetInnerHTML={{ __html: ascii }} />\r\n  </StyledLogo>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport pkg from '../../package.json';\n\nconst StyledTitle = styled.span`\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst Title = () => (\n  <StyledTitle className=\"Title\">\n    {pkg.name} {pkg.version}\n  </StyledTitle>\n);\n\nexport default Title;\n","import React from 'react';\n\nconst Emoji = React.forwardRef(\n  ({ children, ariaLabel = 'Emoji', ...restProps }, ref) => (\n    <span ref={ref} role=\"img\" aria-label={ariaLabel} {...restProps}>\n      {children}\n    </span>\n  )\n);\n\nexport default Emoji;\n","import cx from 'classnames';\nimport { useHoverDirty } from 'react-use';\nimport React, { useRef, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nimport Emoji from 'components/Emoji';\n\nconst StyledMotto = styled.div`\n  cursor: default;\n  margin-top: 2rem;\n`;\n\nconst rotateEmoji = keyframes`\n  from {\n    transform: rotateY(0deg);\n  }\n\n  to {\n    transform: rotateY(-720deg);\n  }\n`;\n\nconst Line = styled.div`\n  line-height: 2;\n  font-size: 1.5rem;\n  text-align: center;\n  letter-spacing: 0.5rem;\n  transition: font-size 0.5s;\n\n  &::before {\n    content: '< ';\n  }\n\n  &::after {\n    content: ' />';\n  }\n\n  @media (max-width: 767.98px) {\n    font-size: 1rem;\n  }\n\n  .emoji {\n    display: inline-block;\n    animation-duration: 2s;\n    animation-fill-mode: both;\n    animation-play-state: paused;\n    animation-iteration-count: 1;\n    animation-name: ${rotateEmoji};\n\n    &--animate,\n    &--reverse-animate {\n      animation-play-state: running;\n    }\n\n    &--reverse-animate {\n      animation-direction: reverse;\n    }\n  }\n`;\n\nconst resetAnimation = element => {\n  element.style.animation = 'none';\n  element.offsetHeight; /* eslint-disable-line no-unused-expressions */\n  element.style.animation = null;\n};\n\nconst Motto = () => {\n  const emojiRef = useRef(null);\n  const isHovering = useHoverDirty(emojiRef);\n  const [animationEnded, setAnimationEnded] = useState(false);\n\n  if (emojiRef.current && isHovering && animationEnded)\n    resetAnimation(emojiRef.current);\n\n  return (\n    <StyledMotto>\n      {/* eslint-disable jsx-a11y/accessible-emoji */}\n      <Line className=\"animated pulse infinite slow\">\n        Roll your own CLI{' '}\n        <Emoji\n          ref={emojiRef}\n          onAnimationStart={() => setAnimationEnded(false)}\n          onAnimationEnd={() => setAnimationEnded(true)}\n          className={cx('emoji', {\n            'emoji--animate': isHovering,\n            'emoji--reverse-animate': emojiRef.current && !isHovering\n          })}\n        >\n          🤙\n        </Emoji>\n      </Line>\n    </StyledMotto>\n  );\n};\n\nexport default Motto;\n","import styled from 'styled-components';\n\nconst Link = styled.a.attrs(() => ({\n  rel: 'noopener noreferrer'\n}))`\n  transition: color 0.5s;\n  color: var(--color-foreground);\n\n  &:hover {\n    color: white;\n  }\n`;\n\nexport default Link;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Link from 'components/Link';\n\nconst StyledFooter = styled.footer`\n  display: flex;\n  padding: 8rem 2rem;\n  min-height: 10rem;\n  text-align: center;\n  align-items: center;\n  word-break: break-word;\n  justify-content: center;\n  color: var(--color-text);\n  background-color: var(--color-background-dark);\n`;\n\nconst StyledHeart = styled.span`\n  font-size: 0;\n  vertical-align: middle;\n\n  svg {\n    width: 1.15rem;\n    display: inline-block;\n  }\n`;\n\nconst Heart = () => (\n  <StyledHeart>\n    <svg\n      fill=\"red\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n      <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"></path>\n    </svg>\n  </StyledHeart>\n);\n\nconst Footer = () => (\n  <StyledFooter>\n    <div>\n      Made with&nbsp;\n      <Heart />\n      {' by '}\n      <Link href=\"https://github.com/adi518\">@adi518</Link>\n    </div>\n  </StyledFooter>\n);\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst StyledSocial = styled.div`\n  z-index: 1;\n  display: grid;\n  grid-gap: 0.5rem;\n  margin-left: auto;\n  grid-auto-flow: column;\n`;\n\nexport const SocialIcon = styled.div`\n  opacity: 0.5;\n  transition: opacity 0.5s;\n\n  a {\n    font-size: 0;\n    display: block;\n  }\n\n  svg {\n    width: 2rem;\n    fill: var(--color-foreground);\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport default StyledSocial;\n","import styled from 'styled-components';\n\nconst HeroHeader = styled.div`\n  display: flex;\n  min-height: 100vh;\n  padding-top: 6rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 6rem;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  color: var(--color-foreground);\n  background-color: var(--hero-background-color);\n  box-shadow: 0 0.5rem 0.5rem rgba(0, 0, 0, 0.05);\n`;\n\nexport default HeroHeader;\n","import Prism from 'prismjs';\nimport React, { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\nimport ReactMarkdown from 'react-markdown';\nimport styled, { css } from 'styled-components';\n\nimport 'prism-themes/themes/prism-atom-dark.css';\n\nconst inlineStyle = css`\n  h1:first-child {\n    margin-top: 4rem;\n  }\n`;\n\nexport const StyledMarkdown = styled.div`\n  width: 100%;\n\n  :not(pre) > code[class*='language-'],\n  pre[class*='language-'] {\n    margin-top: 2rem;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.25);\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    line-height: 40px;\n  }\n\n  ${({ inline }) => inline && inlineStyle}\n\n  p:first-child {\n    display: none;\n  }\n\n  h1:not(:first-of-type) {\n    margin-top: 6rem;\n  }\n`;\n\nconst Markdown = ({ pathToMarkdown, inline }) => {\n  const [markdown, setMarkdown] = useState(null);\n\n  useEffectOnce(() => {\n    (async () => {\n      const markdown = await fetch(pathToMarkdown);\n      const text = await markdown.text();\n      setMarkdown(text);\n      Prism.highlightAll();\n    })();\n  });\n\n  return (\n    <StyledMarkdown inline={inline}>\n      <ReactMarkdown source={markdown} />\n    </StyledMarkdown>\n  );\n};\n\nexport default Markdown;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  outline: none;\n  min-width: 10rem;\n  font-size: 1.25rem;\n  border-radius: 2rem;\n  padding: 0.5rem 1.5rem;\n  background-color: transparent;\n  color: var(--color-foreground);\n  font-family: var(--font-family);\n  transition: background-color 0.5s;\n  border: 0.125rem solid var(--color-foreground);\n\n  &:focus {\n    box-shadow: 0 0 0.25rem;\n  }\n\n  &:hover {\n    color: var(--color-text-dark);\n    background-color: var(--color-foreground);\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as Scroll from 'react-scroll';\n\nimport Button from 'components/Button';\n\nimport pkg from '../../package.json';\n\nconst StyledGetStarted = styled.div`\n  display: flex;\n  margin-top: 3rem;\n  font-size: 1.5rem;\n  text-align: center;\n  flex-direction: column;\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-auto-flow: column;\n\n  @media (max-width: 425px) {\n    grid-gap: 0;\n  }\n`;\n\n// const StyledGitHubStar = styled.div`\n//   font-size: 0;\n//   margin-top: 2rem;\n//   letter-spacing: 0.05rem;\n//   transform: translateY(5px);\n\n//   @media (max-width: 425px) {\n//     position: absolute;\n//     margin-top: 0;\n//     left: 1rem;\n//     top: 1rem;\n//   }\n// `;\n\n// const GitHubStar = () => (\n//   <StyledGitHubStar>\n//     <a\n//       data-size=\"large\"\n//       data-show-count=\"true\"\n//       className=\"github-button\"\n//       href={pkg.repository.url}\n//       aria-label={`Star ${pkg.name} on GitHub`}\n//     >\n//       Star\n//     </a>\n//   </StyledGitHubStar>\n// );\n\nconst StyledGitHubButton = styled(Button)`\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst GitHubButton = () => (\n  <a href={pkg.repository.url}>\n    <StyledGitHubButton>GitHub</StyledGitHubButton>\n  </a>\n);\n\nconst GetStarted = () => (\n  <StyledGetStarted>\n    <Buttons>\n      <Scroll.Link to=\"Page-Markdown\" smooth>\n        <Button>Get started</Button>\n      </Scroll.Link>\n      <GitHubButton />\n    </Buttons>\n    {/* <GitHubStar /> */}\n  </StyledGetStarted>\n);\n\nexport default GetStarted;\n","import React from 'react';\n\nimport { SocialIcon } from './Social';\n\nimport pkg from '../../package.json';\n\nconst GitHubAnchor = () => (\n  <SocialIcon>\n    <a href={pkg.repository.url}>\n      <svg\n        focusable=\"false\"\n        aria-hidden=\"true\"\n        viewBox=\"0 0 496 512\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path>\n      </svg>\n    </a>\n  </SocialIcon>\n);\n\nexport default GitHubAnchor;\n","import React from 'react';\n\nimport { SocialIcon } from './Social';\n\nconst FacebookLogo = () => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\" />\n  </svg>\n);\n\nconst FacebookAnchor = () => (\n  <SocialIcon>\n    <a href=\"https://www.facebook.com/snippetsJS\">\n      <FacebookLogo />\n    </a>\n  </SocialIcon>\n);\n\nexport default FacebookAnchor;\n","import React from 'react';\nimport * as Scroll from 'react-scroll';\n\nimport Nav from 'components/Nav';\nimport Page from 'components/Page';\nimport Logo from 'components/Logo';\n// import Emoji from 'components/Emoji';\nimport Title from 'components/Title';\nimport Motto from 'components/Motto';\nimport Footer from 'components/Footer';\nimport Social from 'components/Social';\nimport HeroPage from 'components/HeroPage';\nimport Markdown from 'components/Markdown';\nimport GetStarted from 'components/GetStarted';\nimport GitHubAnchor from 'components/GitHubAnchor';\nimport FacebookAnchor from 'components/FacebookAnchor';\n\n// import isDev from 'utils/is-dev';\n\nimport 'animate.css/animate.min.css';\n\nconst markdownPath =\n  'https://raw.githubusercontent.com/adi518/react-ryo-cli/master/README.md';\n\nfunction Root() {\n  return (\n    <React.Fragment>\n      {/* eslint-disable jsx-a11y/accessible-emoji */}\n      <HeroPage className=\"animated fadeIn\">\n        <Nav>\n          <Title />\n          <Social>\n            <FacebookAnchor />\n            <GitHubAnchor />\n          </Social>\n        </Nav>\n        <Logo />\n        <Motto />\n        <GetStarted />\n      </HeroPage>\n      <Scroll.Element name=\"Page-Markdown\">\n        <Page>\n          <Markdown pathToMarkdown={markdownPath} />\n        </Page>\n      </Scroll.Element>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default Root;\n","import React from 'react';\nimport Root from 'routes/Root';\n\n// import \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}